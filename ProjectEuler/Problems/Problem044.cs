namespace ProjectEuler
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Pentagonal numbers are generated by the formula, P_n=n(3n−1)/2. The first ten pentagonal numbers are:
    /// 
    /// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
    /// 
    /// It can be seen that P_4 + P_7 = 22 + 70 = 92 = P_8. However, their difference, 70 − 22 = 48, is not pentagonal.
    /// 
    /// Find the pair of pentagonal numbers, P_j and P_k, for which their sum and difference is pentagonal and D = |P_k − P_j| is minimised; what is the value of D?
    /// </summary>
    [Result(Name = "difference", Expected = "5482660")]
    public class Problem044 : Problem
    {
        public override string Solve(string resource)
        {
            var kStart = new Dictionary<int, int>();

            for (int allowableDifference = 4; ; allowableDifference++)
            {
                for (int j = 1; ; j++)
                {
                    var tested = false;
                    for (int k = kStart.ContainsKey(j) ? kStart[j] : j + 1; ; k++)
                    {
                        var pJ = NumberTheory.Pentagon(j);
                        var pK = NumberTheory.Pentagon(k);
                        var diff = pK - pJ;

                        if (diff > allowableDifference)
                        {
                            break;
                        }

                        kStart[j] = k + 1;

                        tested = true;

                        if (NumberTheory.IsPentagonal(diff) &&
                            NumberTheory.IsPentagonal(pJ + pK))
                        {
                            return diff.ToString();
                        }
                    }

                    if (!tested)
                    {
                        break;
                    }
                }
            }
        }
    }
}
